/*2150792 计科 牛禄阳*/
#include <iostream>
using namespace std;

/*
template<typename T, int N>
定义一个具有两个模板参数的模板
T 是一个类型模板参数，表示模板中的类型参数。
N 是一个非类型模板参数，表示一个整数值。
可以创建一个固定大小的数组类模板，其中 T 表示数组元素的类型，N 表示数组的大小
*/

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
template<typename T, int N>
void test(T(&array)[N])	//将...替换为相应内容
{
	cout << sizeof(array) << endl;	//array为形参名
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
template<typename T, int N>
char* tj_strcpy_s(T(&dst)[N], const char* src)	//将...替换为相应内容
{
	char* d = dst;		//dst为要复制的目标串
	const char* s = src;	//src为要复制的源串

	while (*s != '\0' && d - dst < int(sizeof(dst)) - 1)
		*d++ = *s++;
	*d = '\0';

	return dst;
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int main()
{
	int t1[10];
	double t2[20];
	test(t1);	//期望输入40
	test(t2);	//期望输出160

	char s1[10], s2[20];
	const char* s = "Welcome to Tongji University!";
	cout << tj_strcpy_s(s1, s) << '*' << endl; //期望输出：Welcome t*
	cout << tj_strcpy_s(s2, s) << '*' << endl; //期望输出：Welcome to Tongji U*

	return 0;
}
